一.请说出下列最终的执行结果，并解释为什么。

var a = []
for(var i = 0; i < 10; i++){
  a[i] = function(){
    console.log(i)
  }
}

a[6]()

执行结果：10
原因：在for循环中，i是以var关键词声明的，var为全局变量声明关键词，所声明的i为全局变量，当循环结束的时候，i的
值变为10，所以当a[6]()执行时，打印出来的i为10。

二.请说出下列最终的执行结果，并解释为什么。
var tmp = 123
if(true){
  console.log(tmp)
  let tmp
}

执行结果：会报一个引用错误
原因：在if作用域中，tmp是以let（块级作用域）关键词声明，这和var(全局作用域）声明的tmp就不会
互相影响，并且console.log(tmp)在声明tmp之前，在块级作用域中不会存在变量提升现象，所以会报引用错误。

三.结合ES6新语法，用最简单的方式找出数组中最小值

var arr = [12,34,32,89,4]

Math.min(...arr)

四.请详细说明var，let，const三种声明变量的方式之间的具体差别

var

全局作用域声明，所声明的变量全局有效，存在变量提升的现象

let

块级作用域声明，所声明变量在所属作用域中有效（全局作用域，if作用域，for作用域等），不存在变量提升现象

const

块级作用域，也作为常量，在let的基础上添加了一个只读属性，一旦声明的变量必须赋值，并且不能更改（所谓更改，是更改其引用）

五.请说出下列代码最终输出的结果，并解释为什么。

var a = 10
var obj = {
  a: 20,
  fn(){
    setTimeout(()=>{
      console.log(this.a)
    })
  }
}
obj.fn()

执行结果：20
原因：箭头函数的this指向是所在作用域中的父级对象（上下文对象），样例中的this所在作用域的父级对象为obj，所以this指向obj，所以
执行结果为10。

六.简述Symbol类型的用途。

Symbol类型的意思使唯一的，可以用作对象中的key值，这样可以使所定义的属性是独一无二的，也可以用作唯一的变量。

七.说说什么是浅拷贝，什么是深拷贝。

浅拷贝：只拷贝对象的指针，不拷贝对象的引用，拷贝对象改变后，源对象也会改变。
深拷贝，将对象的引用完全拷贝一份，拷贝对象改变之后，源对象不会改变。

八.请简述TypeScript与JavaScript的之间的关系

TypeScript是JavaScript的超级（superset），TypeScript = JavaScript + ES6+ + 类型系统。

九.请谈谈你所认为的TypeScript的优缺点。

优点：

1.强类型和静态类型可以使编译时就可以知道代码的风险，极大的降低了代码的错误率，使代码更牢靠。
2.使代码的重构能力更强。
3.可以减少很多不必要的类型判断。

缺点：

1.学习成本高。
2.项目前期的构建成本高，需要很多的代码书写量。

十.描述引用计数的工作原理和优缺点。

工作原理：

1.给引用对象设置引用数。
2.对象改变之后，引用数改变。
3.引用数变为0后，立即执行垃圾回收。

优点：

1.可以立即执行垃圾回收。
2.大大提升性能，减少页面卡顿。

缺点：

1.不能回收循环引用的对象。
2.比较耗费时间。

十一.描述标记整理算法的工作流程。

1.遍历所有对象，将活跃东西做标记。
2.整理活跃对象的地址顺序。
3.遍历所有对象，将没有标记的对象清除。

十二.描述V8中新生代存储区垃圾回收的流程。

1.From区中的进行标记整理算法。
2.将整理后的活跃对象放入To区。
3.To区和From区互换位置，From区变为To区，To区变为From区。
4.完成内存释放，所释放的对象则会放入空闲空间中。

十三.描述增量标记算法在何时使用及工作原理。

增量标记算法在老生代回收垃圾对象时使用

工作原理：将垃圾回收（GC）分为一个个的小步骤，间接式的和js脚本做交替执行。